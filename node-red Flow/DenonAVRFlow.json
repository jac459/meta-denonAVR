[
   {
      "id":"4da7d783.603db8",
      "type":"tab",
      "label":"DenonAVR",
      "disabled":false,
      "info":""
   },
   {
      "id":"18addb61.93dcfd",
      "type":"mqtt in",
      "z":"4da7d783.603db8",
      "name":"MQTT Brain",
      "topic":"meta/DenonAVR/#",
      "qos":"2",
      "datatype":"auto",
      "broker":"920bfa37.0c7b9",
      "x":90,
      "y":300,
      "wires":[
         [
            "b60e073f.09824"
         ]
      ]
   },
   {
      "id":"b60e073f.09824",
      "type":"function",
      "z":"4da7d783.603db8",
      "name":"Split input",
      "func":"// meta/DenonAVR/default/button/VOLUME DOWN : payload: Pressed\nvar output = msg.topic.split(\"/\");\nvar name_meta = output[0];\nvar device = output[1];\nvar OrgUrl = output[2];\nvar command_type = output[3]; \nvar button = output[4];\n\n\nvar ipdata; \nvar  ip; \nvar port;\n\nif (OrgUrl == \"default\") // No auto discovery\n   {ip = \"192.168.1.130\";\n   port = \"23\";\n   }\nelse\n    {ipdata = OrgUrl.split(\":\");\n    ip = ipdata[0];\n    port = ipdata[1];\n    }\n\nflow.set(\"ThisIP\",ip); // and save the IP-address; we'll need it for a toggle \nflow.set(\"ThisPort\",port); // and save the port; we'll need it for a toggle \nreturn {\n        name_meta: output[0],\n        devicename: output[1],\n        deviceid: output[2],\n        command_type: output[3], \n        button: output[4],\n        payload:msg.payload,\n        ip: ip, port: port, host: ip\n};",
      "outputs":1,
      "noerr":0,
      "initialize":"",
      "finalize":"",
      "x":280,
      "y":300,
      "wires":[
         [
            "4d5c2073.3a2fd8"
         ]
      ]
   },
   {
      "id":"4d5c2073.3a2fd8",
      "type":"switch",
      "z":"4da7d783.603db8",
      "name":"Switch input",
      "property":"button",
      "propertyType":"msg",
      "rules":[
         {
            "t":"cont",
            "v":"PLAY",
            "vt":"str"
         },
         {
            "t":"cont",
            "v":"PAUSE",
            "vt":"str"
         },
         {
            "t":"cont",
            "v":"STOP",
            "vt":"str"
         },
         {
            "t":"cont",
            "v":"CURSOR",
            "vt":"str"
         },
         {
            "t":"cont",
            "v":"PAGE",
            "vt":"str"
         },
         {
            "t":"cont",
            "v":"VOLUME",
            "vt":"str"
         },
         {
            "t":"cont",
            "v":"MENU",
            "vt":"str"
         },
         {
            "t":"cont",
            "v":"BACK",
            "vt":"str"
         },
         {
            "t":"cont",
            "v":"SUBTITLE",
            "vt":"str"
         },
         {
            "t":"cont",
            "v":"LANGUAGE",
            "vt":"str"
         },
         {
            "t":"cont",
            "v":"POWER",
            "vt":"str"
         },
         {
            "t":"cont",
            "v":"OSD",
            "vt":"str"
         },
         {
            "t":"cont",
            "v":"INPUT",
            "vt":"str"
         },
         {
            "t":"cont",
            "v":"SUR:",
            "vt":"str"
         },
         {
            "t":"cont",
            "v":"PRESET",
            "vt":"str"
         },
         {
            "t":"cont",
            "v":"RESO ",
            "vt":"str"
         },
         {
            "t":"cont",
            "v":"PICT",
            "vt":"str"
         },
         {
            "t":"cont",
            "v":"TUNERFREQ",
            "vt":"str"
         },
         {
            "t":"cont",
            "v":"TUNERPRES",
            "vt":"str"
         },
         {
            "t":"cont",
            "v":"TUNERBAND",
            "vt":"str"
         },
         {
            "t":"cont",
            "v":"HDRADIOCH",
            "vt":"str"
         },
         {
            "t":"cont",
            "v":"HDRADIOPR",
            "vt":"str"
         },
         {
            "t":"cont",
            "v":"ZONE",
            "vt":"str"
         },
         {
            "t":"cont",
            "v":"MUTE",
            "vt":"str"
         },
         {
            "t":"cont",
            "v":"DIMMER",
            "vt":"str"
         },
         {
            "t":"cont",
            "v":"DYNVOL",
            "vt":"str"
         },
         {
            "t":"cont",
            "v":"INFO",
            "vt":"str"
         },
         {
            "t":"cont",
            "v":"OPTION",
            "vt":"str"
         }
      ],
      "checkall":"true",
      "repair":false,
      "outputs":28,
      "x":430,
      "y":300,
      "wires":[
         [
            
         ],
         [
            
         ],
         [
            
         ],
         [
            "f0994af5.c7256"
         ],
         [
            
         ],
         [
            "f9ee5b99.ae8978"
         ],
         [
            "2f398988.04e6ee"
         ],
         [
            "2f398988.04e6ee"
         ],
         [
            
         ],
         [
            
         ],
         [
            "d6557fcc.f531b"
         ],
         [
            
         ],
         [
            "a0292c4a.688be"
         ],
         [
            "34188862.c74b08"
         ],
         [
            "6eaf25c4.e5bca4"
         ],
         [
            "84164d80.857448"
         ],
         [
            "5c734b44.e6a204"
         ],
         [
            "6bf60475.7d4a34"
         ],
         [
            "b2b602d8.e1396"
         ],
         [
            "a4eb828f.6f81b"
         ],
         [
            "72a17801.3a901"
         ],
         [
            "19bab9b7.a89a86"
         ],
         [
            "410b5176.efedb8"
         ],
         [
            "9d02f5ba.f07898"
         ],
         [
            "75a29a28.90b07c"
         ],
         [
            "f95baae.a83e958"
         ],
         [
            "f4b89357.144e3"
         ],
         [
            "4d9d6572.685a6c"
         ]
      ]
   },
   {
      "id":"f9ee5b99.ae8978",
      "type":"function",
      "z":"4da7d783.603db8",
      "name":"SetVolume ",
      "func":"\nvar output = msg.button.split(\" \");\nvar MyPayload = msg.payload\nvar Percentage = (!isNaN(MyPayload) && isFinite(MyPayload))\n\nif (Percentage) {\n    SetVol = \"MV\"+MyPayload\n    }\nelse\n    var SetVol = \"MV\"+output[1];\n\n\n\nreturn  {\n    payload: SetVol\n}\n\n",
      "outputs":1,
      "noerr":0,
      "initialize":"",
      "finalize":"",
      "x":670,
      "y":80,
      "wires":[
         [
            "9f9f351b.1ef9e"
         ]
      ]
   },
   {
      "id":"d6557fcc.f531b",
      "type":"function",
      "z":"4da7d783.603db8",
      "name":"Power",
      "func":"\nvar output = msg.button.split(\" \");\nvar SetPower = \"\";\nif (output[1] == \"ON\") \n    SetPower = \"PWON\"\nelse\n    SetPower = \"PWSTANDBY\"\nreturn  {\n    payload: SetPower\n}",
      "outputs":1,
      "noerr":0,
      "initialize":"",
      "finalize":"",
      "x":650,
      "y":153,
      "wires":[
         [
            "9f9f351b.1ef9e"
         ]
      ]
   },
   {
      "id":"f0994af5.c7256",
      "type":"function",
      "z":"4da7d783.603db8",
      "name":"Cursor",
      "func":"MyDirection=msg.button.slice(7,99)\nMyDirection = MyDirection.toLowerCase()\nvar MyCommand = \"MN\" \n\n\nif (MyDirection == \"enter\" )  \n    MyCommand = \"MNENT\"\nelse\nif (MyDirection == \"down\" ) \n    MyCommand = \"MNCDN\"\nelse\nif (MyDirection == \"up\" ) \n    MyCommand = \"MNCUP\"\nelse\nif (MyDirection == \"left\" ) \n    MyCommand = \"MNCLT\"\nelse\nif (MyDirection == \"right\" ) \n    MyCommand = \"MNCRT\"\n\n\nreturn {payload:  MyCommand, MyCommand: MyDirection}\n",
      "outputs":1,
      "noerr":0,
      "initialize":"",
      "finalize":"",
      "x":650,
      "y":40,
      "wires":[
         [
            "9f9f351b.1ef9e"
         ]
      ]
   },
   {
      "id":"2f398988.04e6ee",
      "type":"function",
      "z":"4da7d783.603db8",
      "name":"Menu",
      "func":"var MyCommand = \"MN\" \n\n\nif (msg.button == \"BACK\" )  \n    MyCommand = \"MNRTN\"\nelse\n    MyCommand = \"MNMEN ON\"\nreturn {payload: MyCommand}",
      "outputs":1,
      "noerr":0,
      "initialize":"",
      "finalize":"",
      "x":650,
      "y":120,
      "wires":[
         [
            "9f9f351b.1ef9e"
         ]
      ]
   },
   {
      "id":"a0292c4a.688be",
      "type":"function",
      "z":"4da7d783.603db8",
      "name":"Input",
      "func":"MySource=msg.button.slice(6,99)\nMySource = MySource.toLowerCase()\nvar MyCommand = \"\" \n\nif (MySource == \"tuner\") \n   MyCommand = \"SITUNER\"\nelse\nif (MySource == \"bd\") \n   MyCommand = \"SIBD\"\nelse\n if (MySource == \"phono\") \n   MyCommand = \"SIPHONO\"\n else\n if (MySource == \"cd\") \n   MyCommand = \"SICD\"\n else\n if (MySource == \"dvd\") \n   MyCommand = \"SIDVD\"\n else\n if (MySource == \"hdp\") \n   MyCommand = \"SIHDP\"\n else\n if (MySource == \"sat\") \n   MyCommand = \"SISAT\"\n else\n if (MySource == \"vcr\") \n   MyCommand = \"SIVCR\"\n else\n  if (MySource == \"dvr\") \n   MyCommand = \"SIDVR\"\n else\n  if (MySource == \"v.aux\") \n   MyCommand = \"SIV.AUX\"\n else\n  if (MySource == \"net\") \n   MyCommand = \"SINET\"\n else\n  if (MySource == \"xm\") \n   MyCommand = \"SIXM\"\n else\n  if (MySource == \"ipod\") \n   MyCommand = \"SIIPOD\"\n else\n      MyCommand = \"SI\"+MySource.toUpperCase()\n   \nreturn {payload: MyCommand, mypart: MySource}\n",
      "outputs":1,
      "noerr":0,
      "initialize":"",
      "finalize":"",
      "x":650,
      "y":193,
      "wires":[
         [
            "9f9f351b.1ef9e"
         ]
      ]
   },
   {
      "id":"34188862.c74b08",
      "type":"function",
      "z":"4da7d783.603db8",
      "name":"Surround",
      "func":"//var MyMode=msg.button.slice(7,99)\nvar MyButton = msg.button.split(\":\");\nvar MyMode = MyButton[1].toUpperCase()\n\nif (MyMode==\"DOLBYD\")\n    MyMode = \"DOLBY DIGITAL\"\nelse\nif (MyMode==\"DTS-SURR\")\n    MyMode = \"DTS SURROUND\"\n\nvar MyCommand = \"MS\"+MyMode \n\n\nreturn  {\n    payload: MyCommand\n}\n\n",
      "outputs":1,
      "noerr":0,
      "initialize":"",
      "finalize":"",
      "x":661,
      "y":235,
      "wires":[
         [
            "9f9f351b.1ef9e"
         ]
      ]
   },
   {
      "id":"6eaf25c4.e5bca4",
      "type":"function",
      "z":"4da7d783.603db8",
      "name":"Preset",
      "func":"//var MyMode=msg.button.slice(7,99)\nvar MyButton = msg.button.split(\" \");\nvar MyMode = MyButton[1].toUpperCase()\nvar MyCommand = \"TPAN\"+MyMode \n\n\nreturn {payload: MyCommand\n}\n",
      "outputs":1,
      "noerr":0,
      "initialize":"",
      "finalize":"",
      "x":650,
      "y":273,
      "wires":[
         [
            "9f9f351b.1ef9e"
         ]
      ]
   },
   {
      "id":"84164d80.857448",
      "type":"function",
      "z":"4da7d783.603db8",
      "name":"Resolution",
      "func":"//var MyMode=msg.button.slice(7,99)\nvar MyButton = msg.button.split(\" \");\nvar MyMode = MyButton[1].toUpperCase()\nvar MyCommand = \"VS\"+MyMode \n\nreturn {\n    payload: MyCommand}\n",
      "outputs":1,
      "noerr":0,
      "initialize":"",
      "finalize":"",
      "x":670,
      "y":313,
      "wires":[
         [
            "9f9f351b.1ef9e"
         ]
      ]
   },
   {
      "id":"9f9f351b.1ef9e",
      "type":"function",
      "z":"4da7d783.603db8",
      "name":"Prepare send",
      "func":"var theip = msg.ip;\n\nvar ThisIP =flow.get(\"ThisIP\") || 0;\nvar ThisPort =flow.get(\"ThisPort\") || 0;\nvar MyPayload = msg.payload\nreturn  {payload: MyPayload+\"\\r\",\n host: ThisIP, port:ThisPort,theip:theip} ",
      "outputs":1,
      "noerr":0,
      "initialize":"",
      "finalize":"",
      "x":880,
      "y":300,
      "wires":[
         [
            "49a63dc0.670aac"
         ]
      ]
   },
   {
      "id":"5c734b44.e6a204",
      "type":"function",
      "z":"4da7d783.603db8",
      "name":"Picture",
      "func":"//var MyMode=msg.button.slice(7,99)\nvar MyButton = msg.button.split(\" \");\nvar MyMode = MyButton[1].toUpperCase()\n\nif (MyMode==\"Standard\")\n    MyMode=\"std\"\nelse\nif (MyMode==\"Movie\")\n    MyMode=\"MOV\"\nelse\nif (MyMode==\"Vivid\")\n    MyMode=\"VVD\"\nelse\nif (MyMode==\"Stream\")\n    MyMode=\"STM\"\nelse\nif (MyMode==\"Custom\")\n    MyMode=\"CTM\"\nelse\nif (MyMode==\"ISF Day\")\n    MyMode=\"DAY\"\nelse\nif (MyMode==\"ISF NIGHT\")\n    MyMode=\"NGT\"\n\nvar MyCommand = \"PV\"+MyMode \n\nreturn {\n    payload: MyCommand}\n",
      "outputs":1,
      "noerr":0,
      "initialize":"",
      "finalize":"",
      "x":660,
      "y":353,
      "wires":[
         [
            "9f9f351b.1ef9e"
         ]
      ]
   },
   {
      "id":"6bf60475.7d4a34",
      "type":"function",
      "z":"4da7d783.603db8",
      "name":"Tuner FREQ",
      "func":"//var MyMode=msg.button.slice(7,99)\nvar MyButton = msg.button.split(\" \");\nvar MyMode = MyButton[1].toUpperCase()\n\n\nvar MyCommand = \"TFAN\"+MyMode \n\nreturn {\n   payload: MyCommand}\n",
      "outputs":1,
      "noerr":0,
      "initialize":"",
      "finalize":"",
      "x":670,
      "y":393,
      "wires":[
         [
            "9f9f351b.1ef9e"
         ]
      ]
   },
   {
      "id":"b2b602d8.e1396",
      "type":"function",
      "z":"4da7d783.603db8",
      "name":"Tuner Preset",
      "func":"//var MyMode=msg.button.slice(7,99)\nvar MyButton = msg.button.split(\" \");\nvar MyMode = MyButton[1].toUpperCase()\n\n\nvar MyCommand = \"TPAN\"+MyMode \n\nreturn {\n    payload: MyCommand}\n",
      "outputs":1,
      "noerr":0,
      "initialize":"",
      "finalize":"",
      "x":670,
      "y":433,
      "wires":[
         [
            "9f9f351b.1ef9e"
         ]
      ]
   },
   {
      "id":"72a17801.3a901",
      "type":"function",
      "z":"4da7d783.603db8",
      "name":"Tuner HD Channel",
      "func":"//var MyMode=msg.button.slice(7,99)\nvar MyButton = msg.button.split(\" \");\nvar MyMode = MyButton[1].toUpperCase()\n\n\nvar MyCommand = \"TFHD\"+MyMode \n\nreturn {    payload: MyCommand}\n",
      "outputs":1,
      "noerr":0,
      "initialize":"",
      "finalize":"",
      "x":690,
      "y":593,
      "wires":[
         [
            "9f9f351b.1ef9e"
         ]
      ]
   },
   {
      "id":"19bab9b7.a89a86",
      "type":"function",
      "z":"4da7d783.603db8",
      "name":"Tuner HD Preset",
      "func":"//var MyMode=msg.button.slice(7,99)\nvar MyButton = msg.button.split(\" \");\nvar MyMode = MyButton[1].toUpperCase()\n\n\nvar MyCommand = \"TPHD\"+MyMode \n\nreturn {\n        payload: MyCommand\n}\n",
      "outputs":1,
      "noerr":0,
      "initialize":"",
      "finalize":"",
      "x":680,
      "y":551,
      "wires":[
         [
            "9f9f351b.1ef9e"
         ]
      ]
   },
   {
      "id":"a4eb828f.6f81b",
      "type":"function",
      "z":"4da7d783.603db8",
      "name":"Tuner Band",
      "func":"//var MyMode=msg.button.slice(7,99)\nvar MyButton = msg.button.split(\" \");\nvar MyMode = MyButton[1].toUpperCase()\n\n\nvar MyCommand = \"TMAN\"+MyMode \n\nreturn {\n    payload: MyCommand}\n",
      "outputs":1,
      "noerr":0,
      "initialize":"",
      "finalize":"",
      "x":670,
      "y":473,
      "wires":[
         [
            "9f9f351b.1ef9e"
         ]
      ]
   },
   {
      "id":"410b5176.efedb8",
      "type":"function",
      "z":"4da7d783.603db8",
      "name":"Zone",
      "func":"//var MyMode=msg.button.slice(7,99)\nvar MyButton = msg.button.split(\" \");\nvar MyMode = MyButton[1].toUpperCase()\n\n\nvar MyCommand = \"Z\"+MyMode \n\nreturn {\n    payload: MyCommand}",
      "outputs":1,
      "noerr":0,
      "initialize":"",
      "finalize":"",
      "x":650,
      "y":640,
      "wires":[
         [
            "9f9f351b.1ef9e"
         ]
      ]
   },
   {
      "id":"2d2f33bb.2f6f2c",
      "type":"inject",
      "z":"4da7d783.603db8",
      "name":"Power on manually",
      "props":[
         {
            "p":"topic",
            "vt":"str"
         }
      ],
      "repeat":"",
      "crontab":"",
      "once":false,
      "onceDelay":0.1,
      "topic":"meta/DenonAVR/default/button/POWER ON",
      "payloadType":"str",
      "x":170,
      "y":420,
      "wires":[
         [
            "b60e073f.09824"
         ]
      ]
   },
   {
      "id":"75a29a28.90b07c",
      "type":"function",
      "z":"4da7d783.603db8",
      "name":"Dimmer",
      "func":"\nreturn  {\n    payload: \"DIM SEL\"}",
      "outputs":1,
      "noerr":0,
      "initialize":"",
      "finalize":"",
      "x":660,
      "y":720,
      "wires":[
         [
            "9f9f351b.1ef9e"
         ]
      ]
   },
   {
      "id":"f95baae.a83e958",
      "type":"function",
      "z":"4da7d783.603db8",
      "name":"DYN Volume",
      "func":"var MyButton = msg.button.split(\" \");\nvar MyMode = MyButton[1].toUpperCase()\n\nvar SetMode = \"\"\n\nif (MyMode == \"HEAVY\")\n    SetMode = \"HEV\"\n    else\n    if (MyMode == \"MEDIUM\")\n        SetMode = \"MED\"\n    else\n        SetMode = \"LIT\"\nreturn  {\n    payload: \"PSDYNVOL \"+SetMode\n}",
      "outputs":1,
      "noerr":0,
      "initialize":"",
      "finalize":"",
      "x":670,
      "y":760,
      "wires":[
         [
            "9f9f351b.1ef9e"
         ]
      ]
   },
   {
      "id":"f4b89357.144e3",
      "type":"function",
      "z":"4da7d783.603db8",
      "name":"INFO",
      "func":"\nreturn  {\n    payload: \"MNINF\"\n}",
      "outputs":1,
      "noerr":0,
      "initialize":"",
      "finalize":"",
      "x":650,
      "y":800,
      "wires":[
         [
            "9f9f351b.1ef9e"
         ]
      ]
   },
   {
      "id":"4d9d6572.685a6c",
      "type":"function",
      "z":"4da7d783.603db8",
      "name":"OPTION",
      "func":"\nreturn  {\n    payload: \"MNOPT\"\n}",
      "outputs":1,
      "noerr":0,
      "initialize":"",
      "finalize":"",
      "x":660,
      "y":840,
      "wires":[
         [
            "9f9f351b.1ef9e"
         ]
      ]
   },
   {
      "id":"49a63dc0.670aac",
      "type":"tcp request",
      "z":"4da7d783.603db8",
      "server":"",
      "port":"",
      "out":"sit",
      "splitc":" ",
      "name":"request",
      "x":1100,
      "y":300,
      "wires":[
         [
            "bdf559a5.08bc68"
         ]
      ]
   },
   {
      "id":"9d02f5ba.f07898",
      "type":"function",
      "z":"4da7d783.603db8",
      "name":"MUTE",
      "func":"//MUTE TOGGLE\n// Set variable to identify that we are using \"smart programming\"\nflow.set(\"QueryMute\",\"1\"); // to store a variable\nvar MyCommand = \"MU?\"\nvar myip = msg.ip;\nreturn {\n    payload: MyCommand}",
      "outputs":1,
      "noerr":0,
      "initialize":"",
      "finalize":"",
      "x":650,
      "y":680,
      "wires":[
         [
            "9f9f351b.1ef9e"
         ]
      ]
   },
   {
      "id":"bdf559a5.08bc68",
      "type":"function",
      "z":"4da7d783.603db8",
      "name":"Mute toggle",
      "func":"var QueryIfThisIsMute =flow.get(\"QueryMute\") || 0;\nvar ThisIP =flow.get(\"ThisIP\") || 0;\nvar ThisPort =flow.get(\"ThisPort\") || 0;\nflow.set(\"QueryMute\",\"0\");\n\nvar Target = msg.payload.slice(0 , 4)\n\nif (QueryIfThisIsMute == \"1\") \n    if (Target == \"MUON\")  \n        return  {payload:\"MUOFF\\r\",host:ThisIP,port:ThisPort}\n    else    \n        return  {payload:\"MUON\\r\",host:ThisIP,port:ThisPort}\n",
      "outputs":1,
      "noerr":0,
      "initialize":"",
      "finalize":"",
      "x":1110,
      "y":380,
      "wires":[
         [
            "49a63dc0.670aac"
         ]
      ]
   },
   {
      "id":"7cc434b2.a51c54",
      "type":"inject",
      "z":"4da7d783.603db8",
      "name":"manual request",
      "props":[
         {
            "p":"topic",
            "vt":"str"
         }
      ],
      "repeat":"",
      "crontab":"",
      "once":false,
      "onceDelay":0.1,
      "topic":"meta/DenonAVR/default/button/VOLUME UP",
      "x":160,
      "y":500,
      "wires":[
         [
            "b60e073f.09824"
         ]
      ]
   },
   {
      "id":"3f290a4a.c29d0e",
      "type":"inject",
      "z":"4da7d783.603db8",
      "name":"Power off manually",
      "props":[
         {
            "p":"topic",
            "vt":"str"
         }
      ],
      "repeat":"",
      "crontab":"",
      "once":false,
      "onceDelay":0.1,
      "topic":"meta/DenonAVR/default/button/POWER OFF",
      "x":170,
      "y":460,
      "wires":[
         [
            "b60e073f.09824"
         ]
      ]
   },
   {
      "id":"920bfa37.0c7b9",
      "type":"mqtt-broker",
      "name":"Spare neeo brain",
      "broker":"127.0.0.1",
      "port":"1883",
      "clientid":"",
      "usetls":false,
      "compatmode":false,
      "keepalive":"60",
      "cleansession":true,
      "birthTopic":"",
      "birthQos":"0",
      "birthPayload":"",
      "closeTopic":"",
      "closeQos":"0",
      "closePayload":"",
      "willTopic":"",
      "willQos":"0",
      "willPayload":""
   }
]